AWSTemplateFormatVersion: '2010-09-09'
Description: AWS API Gateway with a Lambda Integration

Parameters:
  BucketName: 
    Type: String
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - ProcessingLambdaPermission
    Properties:
      BucketName: !Ref BucketName
      AccessControl: PublicReadWrite
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Function: !GetAtt ProcessingLambdaFunction.Arn

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Statement:  
        -  
          Sid: "AddPerm"  
          Action:  
            - "s3:GetObject"  
          Effect: "Allow"  
          Resource: "arn:aws:s3:::hw2b2cf/*"            
          Principal: "*"                 

  ProcessingLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ProcessingLambdaFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::${BucketName}'
      SourceAccount: !Ref AWS::AccountId

  ProcessingLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: allowLogging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: arn:aws:logs:*:*:*
        - PolicyName: getAndDeleteObjects
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - s3:*
              - s3-object-lambda:*
              Resource: "*"
        - PolicyName: rekognition
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - rekognition:*
              Resource: "*"
        - PolicyName: opensearch
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - es:*
              Resource: "*"

  ProcessingLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: 
        ZipFile: |
          import json
          def lambda_handler(event, context):
              print("Event: %s" % json.dumps(event))
      Handler: lambda_function.lambda_handler
      Role: !GetAtt ProcessingLambdaExecutionRole.Arn
      Runtime: python3.9
      MemorySize: 512
      Timeout: 120
      FunctionName: hw2_LF1cf